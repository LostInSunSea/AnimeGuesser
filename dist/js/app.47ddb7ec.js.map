{"version":3,"file":"js/app.47ddb7ec.js","mappings":"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","sources":["webpack://anime-guesser/./src/App.vue","webpack://anime-guesser/./src/App.vue?7ccd","webpack://anime-guesser/./src/components/GuessColumn.vue?1398","webpack://anime-guesser/./src/components/GuessColumn.vue","webpack://anime-guesser/./src/components/GuessColumn.vue?bfc6","webpack://anime-guesser/./src/components/GuessesTable.vue?3ff1","webpack://anime-guesser/./src/components/GuessesTable.vue","webpack://anime-guesser/./src/components/GuessesTable.vue?575b","webpack://anime-guesser/./src/components/GameResults.vue?3600","webpack://anime-guesser/./src/components/GameResults.vue","webpack://anime-guesser/./src/components/GameContainer.vue?b63f","webpack://anime-guesser/./src/components/GameContainer.vue","webpack://anime-guesser/./src/components/GameContainer.vue?9291","webpack://anime-guesser/./src/views/GameView.vue?5a54","webpack://anime-guesser/./src/views/GameView.vue","webpack://anime-guesser/./src/router/index.ts","webpack://anime-guesser/./src/main.ts","webpack://anime-guesser/webpack/bootstrap","webpack://anime-guesser/webpack/runtime/chunk loaded","webpack://anime-guesser/webpack/runtime/compat get default export","webpack://anime-guesser/webpack/runtime/define property getters","webpack://anime-guesser/webpack/runtime/ensure chunk","webpack://anime-guesser/webpack/runtime/get javascript chunk filename","webpack://anime-guesser/webpack/runtime/get mini-css chunk filename","webpack://anime-guesser/webpack/runtime/global","webpack://anime-guesser/webpack/runtime/hasOwnProperty shorthand","webpack://anime-guesser/webpack/runtime/load script","webpack://anime-guesser/webpack/runtime/make namespace object","webpack://anime-guesser/webpack/runtime/publicPath","webpack://anime-guesser/webpack/runtime/jsonp chunk loading","webpack://anime-guesser/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"page\">\n    <nav>\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/about\">About</router-link>\n    </nav>\n    <router-view />\n  </div>\n</template>\n\n<style>\nhtml{\n  background: url('./assets/mi-min-pkpqoBp11Jc-unsplash.jpg') no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=62fb2299\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=62fb2299&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b3051700\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"column\" }\nconst _hoisted_2 = { class: \"card pic\" }\nconst _hoisted_3 = { class: \"column\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = { class: \"column\" }\nconst _hoisted_6 = { class: \"column\" }\nconst _hoisted_7 = { class: \"column\" }\nconst _hoisted_8 = { class: \"column\" }\nconst _hoisted_9 = { class: \"column\" }\n\nimport { ref, computed } from 'vue';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GuessColumn',\n  props: ['guess', 'solution'],\n  setup(__props) {\n\nconst props = __props;\n// console.log('guess', props.guess);\n// console.log('solution', props.solution);\n// helper variables\n\n// special values for output\nconst relatedSeries = ref('Related Series');\n\n// css markers for each row\nconst genresColor = ref('');\nconst studioColor = ref('');\nconst seasonColor = ref('');\nconst popularityColor = ref('');\nconst sourceColor = ref('');\nconst seriesColor = ref('');\n\n// split genres in half for display\nconst genres = computed(() => {\n  const half = Math.ceil(props.guess.genres.length / 2);\n  const firstHalf = props.guess.genres.slice(0, half);\n  const secondHalf = props.guess.genres.slice(half, props.guess.genres.length);\n  return [firstHalf, secondHalf];\n});\n\n// generate the new values needed for each component\n// functions for title card\n// functions for season card\nfunction checkSeason() {\n  if (props.guess.seasonYear === props.solution.seasonYear) {\n    if (props.guess.season === props.solution.season) {\n      seasonColor.value = 'green';\n    } else {\n      seasonColor.value = 'yellow';\n    }\n  } else {\n    seasonColor.value = 'red';\n  }\n  // eslint-disable-next-line\n  const seasonText = props.guess.season + ' ' + props.guess.seasonYear;\n  return seasonText;\n}\n\n// function for popularity card\nfunction checkPopularity() {\n  if (props.guess.popularity === props.solution.popularity) {\n    popularityColor.value = 'green';\n  } else {\n    popularityColor.value = 'red';\n  }\n  return props.guess.popularity;\n}\n\n// functions for source card\nfunction checkSource() {\n  if (props.guess.source === props.solution.source) {\n    sourceColor.value = 'green';\n  } else {\n    sourceColor.value = 'red';\n  }\n  const source = props.guess.source.replace('_', ' ');\n  return source;\n}\n\n// functions for genre card\nfunction cleanGenreString(genre: string) {\n  let gIcon = genre.toLowerCase();\n  gIcon = gIcon.replace(/\\s/g, '');\n  return gIcon;\n}\n\nfunction convertGenresToIcon(genre: string) {\n  // convert genre to lowercase and remove spaces\n  const gIcon = cleanGenreString(genre);\n  // return the icon\n  const iconMap = {\n    action: '  fa-shield',\n    adventure: 'fa-dungeon',\n    comedy: 'fa-face-laugh-squint',\n    drama: '  fa-masks-theater',\n    ecchi: 'fa-carrot',\n    fantasy: 'fa-dragon',\n    horror: 'fa-skull',\n    mahoushoujo: 'fa-wand-magic-sparkles',\n    mecha: 'fa-robot',\n    music: 'fa-music',\n    mystery: 'fa-puzzle-piece',\n    psychological: 'fa-brain',\n    romance: 'fa-heart',\n    scifi: 'fa-satellite',\n    sliceoflife: 'fa-bread-slice',\n    sports: 'fa-football',\n    supernatural: 'fa-ghost',\n    thriller: 'fa-biohazard',\n  };\n  // update color of card\n  return iconMap[gIcon];\n}\n\nfunction arrayEquals(a, b) {\n  return Array.isArray(a)\n    && Array.isArray(b)\n    && a.length === b.length\n    && a.every((val, index) => val === b[index]);\n}\n\nfunction relatedGenresCheck() {\n  // check if two arrays are equal\n  if (props.guess.genres.length === props.solution.genres.length) {\n    if (arrayEquals(props.solution.genres, props.guess.genres)) {\n      genresColor.value = 'green';\n      return;\n    }\n  }\n  const found = props.guess.genres.some((r) => props.solution.genres.includes(r));\n  if (found) {\n    genresColor.value = 'yellow';\n  } else {\n    genresColor.value = 'red';\n  }\n}\nrelatedGenresCheck();\n\n// functions for studio card\nfunction checkStudio() {\n  if (props.guess.studios.nodes[0].name === props.solution.studios.nodes[0].name) {\n    studioColor.value = 'green';\n  } else {\n    studioColor.value = 'red';\n  }\n  return props.guess.studios.nodes[0].name;\n}\n\n// functions for series card\nfunction relatedSeriesCheck() {\n  // check if same show exactly\n  if (props.guess.id === props.solution.id) {\n    relatedSeries.value = 'Related';\n    seriesColor.value = 'green';\n    return;\n  }\n  // loop through related series\n  for (let i = 0; i < props.guess.relations.nodes.length; i++) {\n    // if the related series is the solution\n    if (props.guess.relations.nodes[i].id === props.solution.id) {\n      relatedSeries.value = 'Related';\n      seriesColor.value = 'green';\n    }\n  }\n  relatedSeries.value = 'Unrelated';\n  seriesColor.value = 'red';\n}\nrelatedSeriesCheck();\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_o_tooltip = _resolveComponent(\"o-tooltip\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, _toDisplayString(__props.guess.title.english), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card\", genresColor.value])\n      }, [\n        _createElementVNode(\"div\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genres.value[0], (icon) => {\n            return (_openBlock(), _createBlock(_component_o_tooltip, {\n              key: icon,\n              label: cleanGenreString(icon)\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(FontAwesomeIcon), {\n                  class: \"icon\",\n                  icon: convertGenresToIcon(icon)\n                }, null, 8, [\"icon\"])\n              ]),\n              _: 2\n            }, 1032, [\"label\"]))\n          }), 128))\n        ]),\n        _hoisted_4,\n        _createElementVNode(\"div\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(genres.value[1], (icon) => {\n            return (_openBlock(), _createBlock(_component_o_tooltip, {\n              key: icon,\n              label: cleanGenreString(icon)\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(FontAwesomeIcon), {\n                  class: \"icon\",\n                  icon: convertGenresToIcon(icon)\n                }, null, 8, [\"icon\"])\n              ]),\n              _: 2\n            }, 1032, [\"label\"]))\n          }), 128))\n        ])\n      ], 2)\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card\", popularityColor.value])\n      }, _toDisplayString(checkPopularity()), 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card\", sourceColor.value])\n      }, _toDisplayString(checkSource()), 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card\", seasonColor.value])\n      }, _toDisplayString(checkSeason()), 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card studio\", studioColor.value])\n      }, _toDisplayString(checkStudio()), 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"card related\", seriesColor.value])\n      }, _toDisplayString(relatedSeries.value), 3)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\n  <div class='column'>\n    <div class='card pic'>\n      {{ guess.title.english }}\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card' :class=\"genresColor\">\n      <div>\n        <o-tooltip v-for=\"icon in genres[0]\" v-bind:key=\"icon\" :label=cleanGenreString(icon)>\n          <FontAwesomeIcon class=\"icon\" :icon=\"convertGenresToIcon(icon)\" />\n        </o-tooltip>\n      </div>\n      <br />\n      <div>\n        <o-tooltip v-for=\"icon in genres[1]\" v-bind:key=\"icon\" :label=cleanGenreString(icon)>\n          <FontAwesomeIcon class=\"icon\" :icon=\"convertGenresToIcon(icon)\" />\n        </o-tooltip>\n      </div>\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card' :class=\"popularityColor\">\n      {{ checkPopularity() }}\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card' :class=\"sourceColor\">\n      {{ checkSource() }}\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card' :class=\"seasonColor\">\n      {{ checkSeason() }}\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card studio' :class=\"studioColor\">\n      {{ checkStudio() }}\n    </div>\n  </div>\n  <div class='column'>\n    <div class='card related' :class=\"seriesColor\">\n      {{ relatedSeries }}\n    </div>\n  </div>\n</template>\n<script setup lang='ts'>\nimport { ref, defineProps, computed } from 'vue';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nconst props = defineProps(['guess', 'solution']);\n// console.log('guess', props.guess);\n// console.log('solution', props.solution);\n// helper variables\n\n// special values for output\nconst relatedSeries = ref('Related Series');\n\n// css markers for each row\nconst genresColor = ref('');\nconst studioColor = ref('');\nconst seasonColor = ref('');\nconst popularityColor = ref('');\nconst sourceColor = ref('');\nconst seriesColor = ref('');\n\n// split genres in half for display\nconst genres = computed(() => {\n  const half = Math.ceil(props.guess.genres.length / 2);\n  const firstHalf = props.guess.genres.slice(0, half);\n  const secondHalf = props.guess.genres.slice(half, props.guess.genres.length);\n  return [firstHalf, secondHalf];\n});\n\n// generate the new values needed for each component\n// functions for title card\n// functions for season card\nfunction checkSeason() {\n  if (props.guess.seasonYear === props.solution.seasonYear) {\n    if (props.guess.season === props.solution.season) {\n      seasonColor.value = 'green';\n    } else {\n      seasonColor.value = 'yellow';\n    }\n  } else {\n    seasonColor.value = 'red';\n  }\n  // eslint-disable-next-line\n  const seasonText = props.guess.season + ' ' + props.guess.seasonYear;\n  return seasonText;\n}\n\n// function for popularity card\nfunction checkPopularity() {\n  if (props.guess.popularity === props.solution.popularity) {\n    popularityColor.value = 'green';\n  } else {\n    popularityColor.value = 'red';\n  }\n  return props.guess.popularity;\n}\n\n// functions for source card\nfunction checkSource() {\n  if (props.guess.source === props.solution.source) {\n    sourceColor.value = 'green';\n  } else {\n    sourceColor.value = 'red';\n  }\n  const source = props.guess.source.replace('_', ' ');\n  return source;\n}\n\n// functions for genre card\nfunction cleanGenreString(genre: string) {\n  let gIcon = genre.toLowerCase();\n  gIcon = gIcon.replace(/\\s/g, '');\n  return gIcon;\n}\n\nfunction convertGenresToIcon(genre: string) {\n  // convert genre to lowercase and remove spaces\n  const gIcon = cleanGenreString(genre);\n  // return the icon\n  const iconMap = {\n    action: '  fa-shield',\n    adventure: 'fa-dungeon',\n    comedy: 'fa-face-laugh-squint',\n    drama: '  fa-masks-theater',\n    ecchi: 'fa-carrot',\n    fantasy: 'fa-dragon',\n    horror: 'fa-skull',\n    mahoushoujo: 'fa-wand-magic-sparkles',\n    mecha: 'fa-robot',\n    music: 'fa-music',\n    mystery: 'fa-puzzle-piece',\n    psychological: 'fa-brain',\n    romance: 'fa-heart',\n    scifi: 'fa-satellite',\n    sliceoflife: 'fa-bread-slice',\n    sports: 'fa-football',\n    supernatural: 'fa-ghost',\n    thriller: 'fa-biohazard',\n  };\n  // update color of card\n  return iconMap[gIcon];\n}\n\nfunction arrayEquals(a, b) {\n  return Array.isArray(a)\n    && Array.isArray(b)\n    && a.length === b.length\n    && a.every((val, index) => val === b[index]);\n}\n\nfunction relatedGenresCheck() {\n  // check if two arrays are equal\n  if (props.guess.genres.length === props.solution.genres.length) {\n    if (arrayEquals(props.solution.genres, props.guess.genres)) {\n      genresColor.value = 'green';\n      return;\n    }\n  }\n  const found = props.guess.genres.some((r) => props.solution.genres.includes(r));\n  if (found) {\n    genresColor.value = 'yellow';\n  } else {\n    genresColor.value = 'red';\n  }\n}\nrelatedGenresCheck();\n\n// functions for studio card\nfunction checkStudio() {\n  if (props.guess.studios.nodes[0].name === props.solution.studios.nodes[0].name) {\n    studioColor.value = 'green';\n  } else {\n    studioColor.value = 'red';\n  }\n  return props.guess.studios.nodes[0].name;\n}\n\n// functions for series card\nfunction relatedSeriesCheck() {\n  // check if same show exactly\n  if (props.guess.id === props.solution.id) {\n    relatedSeries.value = 'Related';\n    seriesColor.value = 'green';\n    return;\n  }\n  // loop through related series\n  for (let i = 0; i < props.guess.relations.nodes.length; i++) {\n    // if the related series is the solution\n    if (props.guess.relations.nodes[i].id === props.solution.id) {\n      relatedSeries.value = 'Related';\n      seriesColor.value = 'green';\n    }\n  }\n  relatedSeries.value = 'Unrelated';\n  seriesColor.value = 'red';\n}\nrelatedSeriesCheck();\n\n</script>\n<style scoped lang='scss'>\n.columns {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  margin: 0.5rem;\n}\n.card {\n  min-height: 4rem;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n}\n\n.pic {\n  background-image: url();\n}\n\n.icon {\n  font-size: 1.5rem;\n  margin: 2px;\n}\n\n.red {\n  background: rgba(255, 0, 0, 0.5);\n}\n\n.green {\n  background: rgba(0, 255, 0, 0.5);\n}\n\n.yellow {\n  background: rgba(255, 255, 0, 0.5);\n}\n\n.gameover{\n  background: rgba(128, 128, 128, 0.5);\n}\n</style>\n","import script from \"./GuessColumn.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GuessColumn.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GuessColumn.vue?vue&type=style&index=0&id=b3051700&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b3051700\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"guesses container\" }\nconst _hoisted_2 = { class: \"guesses\" }\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"columns\\\"><div class=\\\"column\\\">Title</div><div class=\\\"column\\\">Genres</div><div class=\\\"column\\\">Popularity</div><div class=\\\"column\\\">Source</div><div class=\\\"column\\\">Season</div><div class=\\\"column\\\">Studio</div><div class=\\\"column\\\">Related Franchise</div></div>\", 1)\n\nimport { ref } from 'vue';\nimport GuessColumn from './GuessColumn.vue';\n\n// props\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GuessesTable',\n  props: ['guesses', 'selected', 'solution'],\n  setup(__props) {\n\nconst props = __props;\nconst listOfGuesses = ref(props.guesses);\n\nconsole.log('guesses', props.guesses);\nconsole.log('selected', props.selected);\nconsole.log('solution', props.solution);\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(listOfGuesses.value, (guess) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          class: \"columns guesses\",\n          key: guess.id\n        }, [\n          _createVNode(GuessColumn, {\n            guess: guess,\n            solution: __props.solution\n          }, null, 8, [\"guess\", \"solution\"])\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class='guesses container'>\n    <div class='guesses'>\n      <div class='columns'>\n        <div class='column'>Title</div>\n        <div class='column'>Genres</div>\n        <div class='column'>Popularity</div>\n        <div class='column'>Source</div>\n        <div class='column'>Season</div>\n        <div class='column'>Studio</div>\n        <div class='column'>Related Franchise</div>\n      </div>\n      <div class='columns guesses' v-for='guess in listOfGuesses' :key='guess.id'>\n        <GuessColumn :guess='guess' :solution='solution' />\n      </div>\n    </div>\n  </div>\n</template>\n<script setup lang='ts'>\nimport { ref, defineProps } from 'vue';\nimport GuessColumn from './GuessColumn.vue';\n\n// props\nconst props = defineProps(['guesses', 'selected', 'solution']);\nconst listOfGuesses = ref(props.guesses);\n\nconsole.log('guesses', props.guesses);\nconsole.log('selected', props.selected);\nconsole.log('solution', props.solution);\n\n</script>\n<style lang='scss'>\nli {\n  list-style-type: none;\n}\n\n</style>\n","import script from \"./GuessesTable.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GuessesTable.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GuessesTable.vue?vue&type=style&index=0&id=70ae2759&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-265ace3a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"heroImage\" }\nconst _hoisted_3 = [\"src\"]\nconst _hoisted_4 = { class: \"statusMessage\" }\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"You Win\", -1))\nconst _hoisted_7 = [\n  _hoisted_6\n]\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"You Lose\", -1))\nconst _hoisted_10 = [\n  _hoisted_9\n]\nconst _hoisted_11 = { class: \"gamecolumn\" }\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"columns\\\" data-v-265ace3a><div class=\\\"column\\\" data-v-265ace3a>Title</div><div class=\\\"column\\\" data-v-265ace3a>Genres</div><div class=\\\"column\\\" data-v-265ace3a>Popularity</div><div class=\\\"column\\\" data-v-265ace3a>Source</div><div class=\\\"column\\\" data-v-265ace3a>Season</div><div class=\\\"column\\\" data-v-265ace3a>Studio</div><div class=\\\"column\\\" data-v-265ace3a>Related Franchise</div></div>\", 1)\nconst _hoisted_13 = { class: \"columns\" }\n\nimport { ref } from 'vue';\nimport GuessColumn from './GuessColumn.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GameResults',\n  props: ['solution', 'status'],\n  setup(__props) {\n\nconst props = __props;\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"img\", {\n        alt: \"test\",\n        src: __props.solution.coverImage.large\n      }, null, 8, _hoisted_3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      (__props.status === 'win')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))\n        : _createCommentVNode(\"\", true),\n      (__props.status === 'lose')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_10))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      _hoisted_12,\n      _createElementVNode(\"div\", _hoisted_13, [\n        _createVNode(GuessColumn, {\n          guess: __props.solution,\n          solution: __props.solution\n        }, null, 8, [\"guess\", \"solution\"])\n      ])\n    ])\n  ]))\n}\n}\n\n})","import script from \"./GameResults.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameResults.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameResults.vue?vue&type=style&index=0&id=265ace3a&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-265ace3a\"]])\n\nexport default __exports__","import { withAsyncContext as _withAsyncContext, defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, unref as _unref, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b1869df0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"game\"\n}\nconst _hoisted_2 = { class: \"container selection\" }\nconst _hoisted_3 = { class: \"textinput\" }\nconst _hoisted_4 = { class: \"\" }\nconst _hoisted_5 = { class: \"columns\" }\nconst _hoisted_6 = {\n  key: 1,\n  class: \"result\"\n}\n\nimport { ref, computed, watch } from 'vue';\nimport shows from '@/assets/shows.json';\nimport GuessesTable from './GuessesTable.vue';\nimport GameResults from './GameResults.vue';\n\n// function to call anilist api\nconst OPTIONS_LIMIT = 5;\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GameContainer',\n  async setup(__props) {\n\nlet __temp: any, __restore: any\n\nasync function callAnilist(id: number) {\n  // call anilist api\n  const animeinfo = await fetch('https://graphql.anilist.co', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      query ($id: Int) {\n        Media (id: $id, type: ANIME isAdult: false popularity_greater:1000) {\n          id\n          title {\n            romaji\n            english\n          }\n          averageScore\n          season\n          seasonYear\n          genres\n          source\n          popularity\n          studios (isMain:true){\n            nodes{name}\n          }\n          coverImage{\n            medium\n            large\n          }\n          relations{\n            nodes{\n              id\n              title{\n                english\n                romaji\n              }\n            }\n          }\n        }\n      }\n      `,\n      variables: {\n        id,\n      },\n    }),\n  }).then((res) => res.json());\n  return animeinfo.data.Media;\n}\n\n// variables\nconst show = ref('');\nconst selected = ref(null);\nconst guesses = ref([]);\nlet solution = (\n  ([__temp,__restore] = _withAsyncContext(() => callAnilist(16498))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\nconst lives = ref(5);\nconst status = ref('playing');\n\n// filters out the json data for autocomplete and shows only the OPTIONS_LIMIT amount of results\nconst filteredDataObj = computed(() => shows.filter(\n  (option) => {\n    if (option.title.english === null) {\n      return '';\n    }\n    return option.title.english.toString().toLowerCase().indexOf(show.value.toLowerCase()) >= 0;\n  },\n).slice(0, OPTIONS_LIMIT));\n\nasync function submitShow() {\n  // get the show information\n  if (selected.value === null) {\n    console.log('Please select a show');\n    return;\n  }\n  // get the data from anilist\n  const animeinfo = await callAnilist(selected.value.id);\n\n  // clear text box\n  selected.value = null;\n  show.value = '';\n\n  // process guess\n  if (animeinfo.id === solution.id) {\n    // transfer to win screen\n    status.value = 'win';\n    lives.value = 0;\n    return;\n  }\n  lives.value -= 1;\n  if (lives.value === 0) {\n    status.value = 'lose';\n    // transfer to game over screen\n  }\n\n  // add data to guesses\n  guesses.value.push(animeinfo);\n}\n\nasync function resetGame() {\n  // reset the game\n  lives.value = 5;\n  guesses.value.length = 0;\n  selected.value = null;\n  const newSolutionId = shows[Math.floor(Math.random() * shows.length)].id;\n  await callAnilist(newSolutionId).then((res) => {\n    console.log('sol', res);\n    solution = res;\n    status.value = 'playing';\n  });\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_o_autocomplete = _resolveComponent(\"o-autocomplete\")!\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_o_button = _resolveComponent(\"o-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (lives.value > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createVNode(_component_o_autocomplete, {\n                class: \"input\",\n                type: \"text\",\n                modelValue: show.value,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((show).value = $event)),\n                placeholder: \"e.g. Naruto\",\n                data: filteredDataObj.value,\n                field: \"title.english\",\n                clearAble: \"\",\n                expanded: \"\",\n                onSelect: _cache[1] || (_cache[1] = (option) => (selected.value = option))\n              }, {\n                empty: _withCtx(() => [\n                  _createTextVNode(\"No results found\")\n                ]),\n                _: 1\n              }, 8, [\"modelValue\", \"data\"])\n            ]),\n            _createElementVNode(\"div\", { class: \"buttons\" }, [\n              _createElementVNode(\"button\", {\n                onClick: submitShow,\n                class: \"button\"\n              }, \"Submit\")\n            ])\n          ]),\n          _createElementVNode(\"div\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lives.value, (index) => {\n              return (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: index,\n                class: \"icon\",\n                icon: [\"fas\", \"heart\"]\n              }))\n            }), 128))\n          ]),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", _hoisted_5, [\n              (status.value === 'playing')\n                ? (_openBlock(), _createBlock(GuessesTable, {\n                    guesses: guesses.value,\n                    solution: _unref(solution),\n                    key: status.value\n                  }, null, 8, [\"guesses\", \"solution\"]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (lives.value <= 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          (_openBlock(), _createBlock(GameResults, {\n            solution: _unref(solution),\n            status: status.value,\n            key: status.value\n          }, null, 8, [\"solution\", \"status\"])),\n          _createVNode(_component_o_button, {\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (resetGame())),\n            class: \"reset\",\n            label: \"Reset\",\n            variant: \"primary\"\n          })\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <div class=\"game\" v-if=\"lives > 0\">\n      <div class='container selection'>\n        <div class='textinput'>\n          <o-autocomplete class='input' type='text' v-model='show' placeholder='e.g. Naruto' :data='filteredDataObj'\n            field='title.english' clearAble expanded @select='(option: any) => (selected = option)'>\n            <template #empty>No results found</template>\n          </o-autocomplete>\n        </div>\n        <div class='buttons'>\n          <button @click='submitShow' class='button'>Submit</button>\n        </div>\n      </div>\n      <div>\n        <font-awesome-icon v-for=\"index in lives\" :key=\"index\" class='icon' :icon='[\"fas\", \"heart\"]' />\n      </div>\n      <div class=''>\n        <div class=\"columns\">\n          <GuessesTable :guesses='guesses' :solution='solution' :key=\"status\" v-if=\"status === 'playing'\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"result\" v-if=\"lives <= 0\">\n      <GameResults :solution='solution' :status='status' :key=\"status\" />\n      <o-button @click=\"resetGame()\" class=\"reset\" label=\"Reset\" variant=\"primary\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang='ts'>\nimport { ref, computed, watch } from 'vue';\nimport shows from '@/assets/shows.json';\nimport GuessesTable from './GuessesTable.vue';\nimport GameResults from './GameResults.vue';\n\n// function to call anilist api\nasync function callAnilist(id: number) {\n  // call anilist api\n  const animeinfo = await fetch('https://graphql.anilist.co', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      query: `\n      query ($id: Int) {\n        Media (id: $id, type: ANIME isAdult: false popularity_greater:1000) {\n          id\n          title {\n            romaji\n            english\n          }\n          averageScore\n          season\n          seasonYear\n          genres\n          source\n          popularity\n          studios (isMain:true){\n            nodes{name}\n          }\n          coverImage{\n            medium\n            large\n          }\n          relations{\n            nodes{\n              id\n              title{\n                english\n                romaji\n              }\n            }\n          }\n        }\n      }\n      `,\n      variables: {\n        id,\n      },\n    }),\n  }).then((res) => res.json());\n  return animeinfo.data.Media;\n}\n\n// variables\nconst OPTIONS_LIMIT = 5;\nconst show = ref('');\nconst selected = ref(null);\nconst guesses = ref([]);\nlet solution = await callAnilist(16498);\nconst lives = ref(5);\nconst status = ref('playing');\n\n// filters out the json data for autocomplete and shows only the OPTIONS_LIMIT amount of results\nconst filteredDataObj = computed(() => shows.filter(\n  (option) => {\n    if (option.title.english === null) {\n      return '';\n    }\n    return option.title.english.toString().toLowerCase().indexOf(show.value.toLowerCase()) >= 0;\n  },\n).slice(0, OPTIONS_LIMIT));\n\nasync function submitShow() {\n  // get the show information\n  if (selected.value === null) {\n    console.log('Please select a show');\n    return;\n  }\n  // get the data from anilist\n  const animeinfo = await callAnilist(selected.value.id);\n\n  // clear text box\n  selected.value = null;\n  show.value = '';\n\n  // process guess\n  if (animeinfo.id === solution.id) {\n    // transfer to win screen\n    status.value = 'win';\n    lives.value = 0;\n    return;\n  }\n  lives.value -= 1;\n  if (lives.value === 0) {\n    status.value = 'lose';\n    // transfer to game over screen\n  }\n\n  // add data to guesses\n  guesses.value.push(animeinfo);\n}\n\nasync function resetGame() {\n  // reset the game\n  lives.value = 5;\n  guesses.value.length = 0;\n  selected.value = null;\n  const newSolutionId = shows[Math.floor(Math.random() * shows.length)].id;\n  await callAnilist(newSolutionId).then((res) => {\n    console.log('sol', res);\n    solution = res;\n    status.value = 'playing';\n  });\n}\n\n</script>\n<style scoped lang='scss'>\n.textinput {\n  width: 20%;\n  margin-right: 0.25rem;\n}\n\n.selection {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 2rem auto;\n}\n\n.icon {\n  font-size: 2rem;\n  margin: 0.5rem;\n  color: red;\n  margin-bottom: 2rem;\n}\n\n.reset {\n  margin-top: 2rem;\n}\n</style>\n","import script from \"./GameContainer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameContainer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameContainer.vue?vue&type=style&index=0&id=b1869df0&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b1869df0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, Suspense as _Suspense, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\n\nimport GameContainer from '@/components/GameContainer.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GameView',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(), _createBlock(_Suspense, null, {\n      default: _withCtx(() => [\n        _createVNode(GameContainer, { class: \"game board\" })\n      ]),\n      _: 1\n    }))\n  ]))\n}\n}\n\n})","import script from \"./GameView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\nimport GameView from '../views/GameView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    component: GameView,\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue';\nimport Oruga from '@oruga-ui/oruga-next';\nimport { bulmaConfig } from '@oruga-ui/theme-bulma';\nimport '@oruga-ui/theme-bulma/dist/bulma.css';\n/* import the fontawesome core, icon component, and specific icons */\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport {\n  faDragon,\n  faShield,\n  faDungeon,\n  faBiohazard,\n  faFaceLaughSquint,\n  faMasksTheater,\n  faCarrot,\n  faSkull,\n  faWandMagicSparkles,\n  faRobot,\n  faMusic,\n  faPuzzlePiece,\n  faBrain,\n  faHeart,\n  faSatellite,\n  faBreadSlice,\n  faFootball,\n  faGhost,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport App from './App.vue';\nimport router from './router';\n\nlibrary.add(\n  faDragon,\n  faShield,\n  faDungeon,\n  faBiohazard,\n  faFaceLaughSquint,\n  faMasksTheater,\n  faCarrot,\n  faSkull,\n  faWandMagicSparkles,\n  faRobot,\n  faMusic,\n  faPuzzlePiece,\n  faBrain,\n  faHeart,\n  faSatellite,\n  faBreadSlice,\n  faFootball,\n  faGhost,\n);\n\ncreateApp(App).component('font-awesome-icon', FontAwesomeIcon).use(Oruga, bulmaConfig).use(router)\n  .mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"3dde4b95\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"anime-guesser:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/AnimeGuesser/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkanime_guesser\"] = self[\"webpackChunkanime_guesser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(436); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_router_link","to","_component_router_view","script","__exports__","render","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_defineComponent","__name","props","setup","__props","relatedSeries","ref","genresColor","studioColor","seasonColor","popularityColor","sourceColor","seriesColor","genres","computed","half","Math","ceil","guess","length","firstHalf","slice","secondHalf","checkSeason","seasonYear","solution","season","value","seasonText","checkPopularity","popularity","checkSource","source","replace","cleanGenreString","genre","gIcon","toLowerCase","convertGenresToIcon","iconMap","action","adventure","comedy","drama","ecchi","fantasy","horror","mahoushoujo","mecha","music","mystery","psychological","romance","scifi","sliceoflife","sports","supernatural","thriller","arrayEquals","a","b","Array","isArray","every","val","index","relatedGenresCheck","found","some","r","includes","checkStudio","studios","nodes","name","relatedSeriesCheck","id","i","relations","_ctx","_cache","_component_o_tooltip","_resolveComponent","_openBlock","_Fragment","_toDisplayString","title","english","_normalizeClass","_renderList","icon","_createBlock","key","label","default","_withCtx","_unref","FontAwesomeIcon","_","_createStaticVNode","listOfGuesses","guesses","console","log","selected","GuessColumn","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","alt","src","coverImage","large","status","_createCommentVNode","OPTIONS_LIMIT","__temp","__restore","async","callAnilist","animeinfo","fetch","method","headers","Accept","body","JSON","stringify","query","variables","then","res","json","data","Media","show","_withAsyncContext","lives","filteredDataObj","shows","filter","option","toString","indexOf","submitShow","push","resetGame","newSolutionId","floor","random","_component_o_autocomplete","_component_font_awesome_icon","_component_o_button","type","modelValue","$event","placeholder","field","clearAble","expanded","onSelect","empty","_createTextVNode","onClick","GuessesTable","GameResults","variant","_Suspense","GameContainer","routes","path","component","GameView","router","createRouter","history","createWebHashHistory","library","add","faDragon","faShield","faDungeon","faBiohazard","faFaceLaughSquint","faMasksTheater","faCarrot","faSkull","faWandMagicSparkles","faRobot","faMusic","faPuzzlePiece","faBrain","faHeart","faSatellite","faBreadSlice","faFootball","faGhost","createApp","App","use","Oruga","bulmaConfig","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","error","Error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}